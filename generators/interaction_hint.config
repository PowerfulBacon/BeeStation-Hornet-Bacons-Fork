
// Set the source define that will be expanded as an attribute
set source = "ITEM_INTERACTION"
// Set the order that this generator runs
set run_order = 5

// Register the screentip
extend src Initialize()
	// Specify that we do this after the parent call
	// If you want to add the proc before the parent call, then move this line
	// after the one below
	..()
	// Don't repeat it if we added it already
	add once register_context()

// Add the screentip
// Functions will be added if they don't already exist.
// Parameters are fluff and are in this file only
extend src add_context_self(datum/screentip_context/context, mob/user, obj/item/item)
	..()
	// Place this at the end of the rest of the proc
	// Get the path of the 1st parameter to the proc that we are extending
	context.add_left_click_item_action($define.params[1], $proc.params[1].name)

// Add the item interaction
extend src attackby(obj/item/C, mob/user, params)
	// Check everything else first (in case we have special behaviours like shocking that stop this from going through)
	..()
	// Perform the interaction if the user is interacting with the correct item
	if (istype(C, $proc.params[1].type))
		// Call the proc that this attribute define is attached to
		if ($proc.name(C, user))
			return TRUE

// Special notes:
// Tabs for language keywords are ignored, and the indendation doesn't matter
// EXCEPT for when we have byond code, at which point the block is taken literally.
// Use $ to access state dependant variables, valid ones are:
// $proc.name				(name of the proc that the attribute is applied to)
// $proc.fullpath			(Full path of the proc that the attribute is applied to)
// $proc.params[x].name		(The name of the parameter at index X (indexed from 1))
// $proc.params[x].type		(The path of the parameter at index X (indexed from 1))
// $define.params[x]		(The parameter at index X that is applied to the define. ATTRIBUTE(x, y) => 'x' would be 1, 'y' would be 2)
